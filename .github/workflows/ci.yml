name: Continuous Integration

env:
  SRC_PATH: mconf_aggr
  TESTS_PATH: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  format-and-lint:
    runs-on: ubuntu-20.04
    name: Lint and Check Formatting
    steps:
      - name: Check out Source Repository
        uses: actions/checkout@v3
      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.10'
          cache: true
          cache-dependency-path: ./pdm.lock
      - name: Install Dependencies
        run: pdm install
      - name: Lint with Flake
        uses: py-actions/flake8@v2
        with:
          max-line-length: "100"
          path: "./mconf_aggr"
      - name: Check with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./mconf_aggr"
          version: "22.0"
      - name: Run Isort
        uses: isort/isort-action@v1.0.0

  test-and-check-coverage:
    runs-on: ubuntu-20.04
    name: Test and Check Coverage
    steps:
      - name: Check out Source Repository
        uses: actions/checkout@v3
      - name: Get Modified Python Files
        id: changed-python-files
        uses: tj-actions/changed-files@v37
        with:
          files: |
            *.py
      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.10'
          cache: true
          cache-dependency-path: ./pdm.lock
      - name: Install Dependencies
        run: pdm install 
      - name: Load .env File
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env
      - name: Run Tests
        run: pdm run coverage run --source=$SRC_PATH -m unittest discover -s $TESTS_PATH
      - name: Generate XML from Coverage
        run: pdm run coverage xml
      - name: Run Python Cov
        if: steps.changed-python-files.outputs.any_changed == 'false' && github.event_name == 'pull_request'
        uses: orgoro/coverage@v2.1
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}