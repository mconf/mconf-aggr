name: Continuous Integration

env:
  SRC_PATH: mconf_aggr
  TESTS_PATH: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  format-and-lint:
    runs-on: ubuntu-20.04
    name: Lint and Check Formatting
    steps:
      - name: Check out Source Repository
        uses: actions/checkout@v3
      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.10'
          cache: true
          cache-dependency-path: ./pdm.lock
      - name: Install Dependencies
        run: pdm install
      - name: Lint with Flake
        uses: py-actions/flake8@v2
        with:
          path: ${SRC_PATH}
          ignore: "E501,W503"
      - name: Check with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: ${SRC_PATH}
          version: "22.10.0"
      - name: Run Isort
        uses: isort/isort-action@v1.0.0

  test-and-check-coverage:
    runs-on: ubuntu-20.04
    name: Test and Check Coverage
    steps:
      - name: Check out Source Repository
        uses: actions/checkout@v3
      - name: Get Modified Python Files
        id: changed-python-files
        uses: tj-actions/changed-files@v37
        with:
          files: ${SRC_PATH}/*.py
      - name: Set up Python Environment
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup PDM
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' }}
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.10'
          cache: true
          cache-dependency-path: ./pdm.lock
      - name: Install Dependencies
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' && github.event_name == 'pull_request'}}
        run: pdm install 
      - name: Load .env File
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' && github.event_name == 'pull_request'}}
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: envs/webhook-env-file.env
      - name: Run Tests
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' && github.event_name == 'pull_request'}}
        run: pdm run coverage run --source=${SRC_PATH} -m pytest -s ${TESTS_PATH} --ignore ${TESTS_PATH}/black-box --ignore-glob=${TESTS_PATH}/integration*
      - name: Generate XML from Coverage
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' && github.event_name == 'pull_request'}}
        run: pdm run coverage xml
      - name: Run Python Cov
        if: ${{ steps.changed-python-files.outputs.any_changed == 'true' && github.event_name == 'pull_request'}}
        uses: orgoro/coverage@v2.1
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}